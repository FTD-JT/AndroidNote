'use strict';

var React = require('react');
var classNames = require('classnames');

var SIZES = require('./SIZES');

var Spinner = React.createClass({
    displayName: 'Spinner',
    getDefaultProps: function getDefaultProps() {
        return {
            centered: true,
            size: 'md'
        };
    },
    render: function render() {
        var className = classNames('gb-spinner', 'spinner-' + this.props.size, {
            'spinner-inverse': this.props.inverse,
            'spinner-centered': this.props.centered
        });

        return React.createElement('span', { className: className });
    }
});

/**
 * Block div representing a loading area
 */
var SpinnerSlate = React.createClass({
    displayName: 'SpinnerSlate',
    render: function render() {
        return React.createElement(
            'div',
            { className: 'gb-spinner-slate' },
            React.createElement(Spinner, this.props)
        );
    }
});

module.exports = Spinner;
module.exports.Slate = SpinnerSlate;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9TcGlubmVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxRQUFRLFFBQVEsT0FBUixDQUFkO0FBQ0EsSUFBTSxhQUFhLFFBQVEsWUFBUixDQUFuQjs7QUFFQSxJQUFNLFFBQVEsUUFBUSxTQUFSLENBQWQ7O0FBRUEsSUFBTSxVQUFVLE1BQU0sV0FBTixDQUFrQjtBQUFBO0FBTzlCLG1CQVA4Qiw2QkFPWjtBQUNkLGVBQU87QUFDSCxzQkFBVSxJQURQO0FBRUgsa0JBQU07QUFGSCxTQUFQO0FBSUgsS0FaNkI7QUFjOUIsVUFkOEIsb0JBY3JCO0FBQ0wsWUFBSSxZQUFZLFdBQVcsWUFBWCxFQUF5QixhQUFhLEtBQUssS0FBTCxDQUFXLElBQWpELEVBQXVEO0FBQ25FLCtCQUFvQixLQUFLLEtBQUwsQ0FBVyxPQURvQztBQUVuRSxnQ0FBb0IsS0FBSyxLQUFMLENBQVc7QUFGb0MsU0FBdkQsQ0FBaEI7O0FBS0EsZUFBTyw4QkFBTSxXQUFXLFNBQWpCLEdBQVA7QUFDSDtBQXJCNkIsQ0FBbEIsQ0FBaEI7O0FBd0JBOzs7QUFHQSxJQUFNLGVBQWUsTUFBTSxXQUFOLENBQWtCO0FBQUE7QUFDbkMsVUFEbUMsb0JBQzFCO0FBQ0wsZUFBTztBQUFBO0FBQUEsY0FBSyxXQUFVLGtCQUFmO0FBQ0gsZ0NBQUMsT0FBRCxFQUFhLEtBQUssS0FBbEI7QUFERyxTQUFQO0FBR0g7QUFMa0MsQ0FBbEIsQ0FBckI7O0FBUUEsT0FBTyxPQUFQLEdBQWlCLE9BQWpCO0FBQ0EsT0FBTyxPQUFQLENBQWUsS0FBZixHQUF1QixZQUF2QiIsImZpbGUiOiJTcGlubmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgY2xhc3NOYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcblxuY29uc3QgU0laRVMgPSByZXF1aXJlKCcuL1NJWkVTJyk7XG5cbmNvbnN0IFNwaW5uZXIgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcHJvcFR5cGVzOiB7XG4gICAgICAgIGNlbnRlcmVkOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcbiAgICAgICAgaW52ZXJzZTogIFJlYWN0LlByb3BUeXBlcy5ib29sLFxuICAgICAgICBzaXplOiAgICAgUmVhY3QuUHJvcFR5cGVzLm9uZU9mKFNJWkVTKVxuICAgIH0sXG5cbiAgICBnZXREZWZhdWx0UHJvcHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjZW50ZXJlZDogdHJ1ZSxcbiAgICAgICAgICAgIHNpemU6ICdtZCdcbiAgICAgICAgfTtcbiAgICB9LFxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgY2xhc3NOYW1lID0gY2xhc3NOYW1lcygnZ2Itc3Bpbm5lcicsICdzcGlubmVyLScgKyB0aGlzLnByb3BzLnNpemUsIHtcbiAgICAgICAgICAgICdzcGlubmVyLWludmVyc2UnOiAgdGhpcy5wcm9wcy5pbnZlcnNlLFxuICAgICAgICAgICAgJ3NwaW5uZXItY2VudGVyZWQnOiB0aGlzLnByb3BzLmNlbnRlcmVkXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiA8c3BhbiBjbGFzc05hbWU9e2NsYXNzTmFtZX0+PC9zcGFuPjtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBCbG9jayBkaXYgcmVwcmVzZW50aW5nIGEgbG9hZGluZyBhcmVhXG4gKi9cbmNvbnN0IFNwaW5uZXJTbGF0ZSA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImdiLXNwaW5uZXItc2xhdGVcIj5cbiAgICAgICAgICAgIDxTcGlubmVyIHsuLi50aGlzLnByb3BzfSAvPlxuICAgICAgICA8L2Rpdj47XG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gU3Bpbm5lcjtcbm1vZHVsZS5leHBvcnRzLlNsYXRlID0gU3Bpbm5lclNsYXRlO1xuIl19