'use strict';

var React = require('react');
var classNames = require('classnames');

var Icon = require('./Icon');
var Form = require('./Form');
var Input = require('./Input');

var SearchBar = React.createClass({
    displayName: 'SearchBar',
    getDefaultProps: function getDefaultProps() {
        return {
            method: 'get'
        };
    },
    getInitialState: function getInitialState() {
        return {
            value: this.props.value
        };
    },
    onChange: function onChange(e) {
        var value = e.target.value;


        this.setState({ value: value });

        if (this.props.onChange) {
            this.props.onChange(value);
        }
    },
    onSubmit: function onSubmit(e) {
        if (this.props.onSubmit) {
            e.preventDefault();
            this.props.onSubmit(this.state.value);
        }
    },
    render: function render() {
        var _props = this.props;
        var action = _props.action;
        var placeholder = _props.placeholder;
        var name = _props.name;
        var method = _props.method;
        var value = this.state.value;


        return React.createElement(
            Form,
            { className: classNames('search-bar', this.props.className),
                method: method,
                action: action },
            React.createElement(Icon, { id: 'search' }),
            React.createElement(Input, { name: name,
                value: value,
                onChange: this.onChange,
                placeholder: placeholder })
        );
    }
});

module.exports = SearchBar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9TZWFyY2hCYXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNLFFBQVEsUUFBUSxPQUFSLENBQWQ7QUFDQSxJQUFNLGFBQWEsUUFBUSxZQUFSLENBQW5COztBQUVBLElBQU0sT0FBTyxRQUFRLFFBQVIsQ0FBYjtBQUNBLElBQU0sT0FBTyxRQUFRLFFBQVIsQ0FBYjtBQUNBLElBQU0sUUFBUSxRQUFRLFNBQVIsQ0FBZDs7QUFFQSxJQUFNLFlBQVksTUFBTSxXQUFOLENBQWtCO0FBQUE7QUFZaEMsbUJBWmdDLDZCQVlkO0FBQ2QsZUFBTztBQUNILG9CQUFRO0FBREwsU0FBUDtBQUdILEtBaEIrQjtBQWtCaEMsbUJBbEJnQyw2QkFrQmQ7QUFDZCxlQUFPO0FBQ0gsbUJBQU8sS0FBSyxLQUFMLENBQVc7QUFEZixTQUFQO0FBR0gsS0F0QitCO0FBd0JoQyxZQXhCZ0Msb0JBd0J2QixDQXhCdUIsRUF3QnBCO0FBQUEsWUFDQSxLQURBLEdBQ1UsRUFBRSxNQURaLENBQ0EsS0FEQTs7O0FBR1IsYUFBSyxRQUFMLENBQWMsRUFBRSxZQUFGLEVBQWQ7O0FBRUEsWUFBSSxLQUFLLEtBQUwsQ0FBVyxRQUFmLEVBQXlCO0FBQ3JCLGlCQUFLLEtBQUwsQ0FBVyxRQUFYLENBQW9CLEtBQXBCO0FBQ0g7QUFDSixLQWhDK0I7QUFrQ2hDLFlBbENnQyxvQkFrQ3ZCLENBbEN1QixFQWtDcEI7QUFDUixZQUFJLEtBQUssS0FBTCxDQUFXLFFBQWYsRUFBeUI7QUFDckIsY0FBRSxjQUFGO0FBQ0EsaUJBQUssS0FBTCxDQUFXLFFBQVgsQ0FBb0IsS0FBSyxLQUFMLENBQVcsS0FBL0I7QUFDSDtBQUNKLEtBdkMrQjtBQXlDaEMsVUF6Q2dDLG9CQXlDdkI7QUFBQSxxQkFFZ0IsS0FBSyxLQUZyQjtBQUFBLFlBQ0csTUFESCxVQUNHLE1BREg7QUFBQSxZQUNXLFdBRFgsVUFDVyxXQURYO0FBQUEsWUFFRCxJQUZDLFVBRUQsSUFGQztBQUFBLFlBRUssTUFGTCxVQUVLLE1BRkw7QUFBQSxZQUdHLEtBSEgsR0FHYSxLQUFLLEtBSGxCLENBR0csS0FISDs7O0FBS0wsZUFDSTtBQUFDLGdCQUFEO0FBQUEsY0FBTSxXQUFXLFdBQVcsWUFBWCxFQUF5QixLQUFLLEtBQUwsQ0FBVyxTQUFwQyxDQUFqQjtBQUNNLHdCQUFRLE1BRGQ7QUFFTSx3QkFBUSxNQUZkO0FBR0ksZ0NBQUMsSUFBRCxJQUFNLElBQUcsUUFBVCxHQUhKO0FBSUksZ0NBQUMsS0FBRCxJQUFPLE1BQU0sSUFBYjtBQUNPLHVCQUFPLEtBRGQ7QUFFTywwQkFBVSxLQUFLLFFBRnRCO0FBR08sNkJBQWEsV0FIcEI7QUFKSixTQURKO0FBV0g7QUF6RCtCLENBQWxCLENBQWxCOztBQTREQSxPQUFPLE9BQVAsR0FBaUIsU0FBakIiLCJmaWxlIjoiU2VhcmNoQmFyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgY2xhc3NOYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcblxuY29uc3QgSWNvbiA9IHJlcXVpcmUoJy4vSWNvbicpO1xuY29uc3QgRm9ybSA9IHJlcXVpcmUoJy4vRm9ybScpO1xuY29uc3QgSW5wdXQgPSByZXF1aXJlKCcuL0lucHV0Jyk7XG5cbmNvbnN0IFNlYXJjaEJhciA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBwcm9wVHlwZXM6IHtcbiAgICAgICAgY2xhc3NOYW1lOiAgIFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIHBsYWNlaG9sZGVyOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICB2YWx1ZTogICAgICAgUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgYWN0aW9uOiAgICAgIFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIG5hbWU6ICAgICAgICBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICBtZXRob2Q6ICAgICAgUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgb25TdWJtaXQ6ICAgIFJlYWN0LlByb3BUeXBlcy5mdW5jLFxuICAgICAgICBvbkNoYW5nZTogICAgUmVhY3QuUHJvcFR5cGVzLmZ1bmNcbiAgICB9LFxuXG4gICAgZ2V0RGVmYXVsdFByb3BzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbWV0aG9kOiAnZ2V0J1xuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICBnZXRJbml0aWFsU3RhdGUoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogdGhpcy5wcm9wcy52YWx1ZVxuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICBvbkNoYW5nZShlKSB7XG4gICAgICAgIGNvbnN0IHsgdmFsdWUgfSA9IGUudGFyZ2V0O1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyB2YWx1ZSB9KTtcblxuICAgICAgICBpZiAodGhpcy5wcm9wcy5vbkNoYW5nZSkge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZSh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgb25TdWJtaXQoZSkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5vblN1Ym1pdCkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vblN1Ym1pdCh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgYWN0aW9uLCBwbGFjZWhvbGRlcixcbiAgICAgICAgICAgIG5hbWUsIG1ldGhvZCB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyB2YWx1ZSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPEZvcm0gY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdzZWFyY2gtYmFyJywgdGhpcy5wcm9wcy5jbGFzc05hbWUpfVxuICAgICAgICAgICAgICAgICAgbWV0aG9kPXttZXRob2R9XG4gICAgICAgICAgICAgICAgICBhY3Rpb249e2FjdGlvbn0+XG4gICAgICAgICAgICAgICAgPEljb24gaWQ9XCJzZWFyY2hcIiAvPlxuICAgICAgICAgICAgICAgIDxJbnB1dCBuYW1lPXtuYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9IC8+XG4gICAgICAgICAgICA8L0Zvcm0+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gU2VhcmNoQmFyO1xuIl19