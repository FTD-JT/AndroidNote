'use strict';

var React = require('react');
var classNames = require('classnames');

var Icon = require('./icon');

var PADDING_INITIAL = 10;
var DEPTH_PADDING = 18;

var STATUS = ['danger', 'success', 'warning', 'selected'];

/**
 * Tree component:
 *
 * <Tree>
 *      <Tree.Node>
 *          <Tree.Leaf>
 *              <Tree.Toggle /> My Directory
 *          </Tree.Leaf>
 *          <Tree>...</Tree>
 *      </Tree.Node>
 *      <Tree.Node>
 *          <Tree.Leaf>My File</Tree.Leaf>
 *      </Tree.Node>
 * </Tree>
 */

var Tree = React.createClass({
    displayName: 'Tree',

    contextTypes: {
        depth: React.PropTypes.number
    },
    childContextTypes: {
        depth: React.PropTypes.number
    },

    getChildContext: function getChildContext() {
        var depth = this.props.depth || this.context.depth || 0;

        return {
            depth: depth + 1
        };
    },
    render: function render() {
        return React.createElement(
            'div',
            { className: 'Tree' },
            this.props.children
        );
    }
});

var TreeNode = React.createClass({
    displayName: 'TreeNode',
    render: function render() {
        return React.createElement(
            'div',
            { className: 'TreeNode' },
            this.props.children
        );
    }
});

/**
 * Inner content of a tree node
 */
var TreeLeaf = React.createClass({
    displayName: 'TreeLeaf',

    contextTypes: {
        depth: React.PropTypes.number
    },

    getDefaultProps: function getDefaultProps() {
        return {
            href: '#'
        };
    },
    onClick: function onClick(event) {
        var onClick = this.props.onClick;

        if (!onClick) {
            return;
        }

        event.preventDefault();
        onClick();
    },
    render: function render() {
        var _props = this.props;
        var href = _props.href;
        var status = _props.status;
        var depth = this.context.depth;


        var style = {
            paddingLeft: PADDING_INITIAL + depth * DEPTH_PADDING
        };

        var className = classNames('TreeLeaf', status ? 'status-' + status : '');

        return React.createElement(
            'a',
            { className: className, href: href, style: style },
            this.props.children
        );
    }
});

/**
 * Little triangle to toggle sub-tree.
 * Insert a TreeToggle in a TreeLeaf
 */
var TreeToggle = React.createClass({
    displayName: 'TreeToggle',
    onClick: function onClick(event) {
        var onClick = this.props.onClick;


        event.preventDefault();
        event.stopPropagation();

        if (onClick) onClick();
    },
    render: function render() {
        var active = this.props.active;

        var className = classNames('TreeToggle', {
            active: active
        });

        return React.createElement(
            'span',
            { className: className },
            React.createElement(Icon, { id: active ? 'triangle-down' : 'triangle-right' })
        );
    }
});

module.exports = Tree;
module.exports.Node = TreeNode;
module.exports.Leaf = TreeLeaf;
module.exports.Toggle = TreeToggle;
//# sourceMappingURL=data:application/json;base64,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QUFoQjs7QUFJQSxlQUNJO0FBQUE7QUFBQSxjQUFNLFdBQVcsU0FBakI7QUFDSSxnQ0FBQyxJQUFELElBQU0sSUFBSSxTQUFRLGVBQVIsR0FBMEIsZ0JBQXBDO0FBREosU0FESjtBQUtIO0FBMUJnQyxDQUFsQixDQUFuQjs7QUE2QkEsT0FBTyxPQUFQLEdBQWlCLElBQWpCO0FBQ0EsT0FBTyxPQUFQLENBQWUsSUFBZixHQUFzQixRQUF0QjtBQUNBLE9BQU8sT0FBUCxDQUFlLElBQWYsR0FBc0IsUUFBdEI7QUFDQSxPQUFPLE9BQVAsQ0FBZSxNQUFmLEdBQXdCLFVBQXhCIiwiZmlsZSI6IlRyZWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBjbGFzc05hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuXG5jb25zdCBJY29uID0gcmVxdWlyZSgnLi9pY29uJyk7XG5cbmNvbnN0IFBBRERJTkdfSU5JVElBTCA9IDEwO1xuY29uc3QgREVQVEhfUEFERElORyAgID0gMTg7XG5cbmNvbnN0IFNUQVRVUyA9IFtcbiAgICAnZGFuZ2VyJywgJ3N1Y2Nlc3MnLCAnd2FybmluZycsICdzZWxlY3RlZCdcbl07XG5cbi8qKlxuICogVHJlZSBjb21wb25lbnQ6XG4gKlxuICogPFRyZWU+XG4gKiAgICAgIDxUcmVlLk5vZGU+XG4gKiAgICAgICAgICA8VHJlZS5MZWFmPlxuICogICAgICAgICAgICAgIDxUcmVlLlRvZ2dsZSAvPiBNeSBEaXJlY3RvcnlcbiAqICAgICAgICAgIDwvVHJlZS5MZWFmPlxuICogICAgICAgICAgPFRyZWU+Li4uPC9UcmVlPlxuICogICAgICA8L1RyZWUuTm9kZT5cbiAqICAgICAgPFRyZWUuTm9kZT5cbiAqICAgICAgICAgIDxUcmVlLkxlYWY+TXkgRmlsZTwvVHJlZS5MZWFmPlxuICogICAgICA8L1RyZWUuTm9kZT5cbiAqIDwvVHJlZT5cbiAqL1xuXG5jb25zdCBUcmVlID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHByb3BUeXBlczoge1xuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGUsXG4gICAgICAgIGRlcHRoOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyXG4gICAgfSxcbiAgICBjb250ZXh0VHlwZXM6IHtcbiAgICAgICAgZGVwdGg6IFJlYWN0LlByb3BUeXBlcy5udW1iZXJcbiAgICB9LFxuICAgIGNoaWxkQ29udGV4dFR5cGVzOiB7XG4gICAgICAgIGRlcHRoOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyXG4gICAgfSxcblxuICAgIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgICAgY29uc3QgZGVwdGggPSB0aGlzLnByb3BzLmRlcHRoIHx8IHRoaXMuY29udGV4dC5kZXB0aCB8fCAwO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkZXB0aDogKGRlcHRoICsgMSlcbiAgICAgICAgfTtcbiAgICB9LFxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJUcmVlXCI+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuY29uc3QgVHJlZU5vZGUgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcHJvcFR5cGVzOiB7XG4gICAgICAgIGNoaWxkcmVuOiBSZWFjdC5Qcm9wVHlwZXMubm9kZVxuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlRyZWVOb2RlXCI+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBJbm5lciBjb250ZW50IG9mIGEgdHJlZSBub2RlXG4gKi9cbmNvbnN0IFRyZWVMZWFmID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHByb3BUeXBlczoge1xuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGUsXG4gICAgICAgIGhyZWY6ICAgICBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICBvbkNsaWNrOiAgUmVhY3QuUHJvcFR5cGVzLmZ1bmMsXG4gICAgICAgIHN0YXR1czogICBSZWFjdC5Qcm9wVHlwZXMub25lT2YoU1RBVFVTKVxuICAgIH0sXG4gICAgY29udGV4dFR5cGVzOiB7XG4gICAgICAgIGRlcHRoOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyXG4gICAgfSxcblxuICAgIGdldERlZmF1bHRQcm9wcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGhyZWY6ICcjJ1xuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHsgb25DbGljayB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgaWYgKCFvbkNsaWNrKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBvbkNsaWNrKCk7XG4gICAgfSxcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IHsgaHJlZiwgc3RhdHVzIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7IGRlcHRoIH0gPSB0aGlzLmNvbnRleHQ7XG5cbiAgICAgICAgbGV0IHN0eWxlID0ge1xuICAgICAgICAgICAgcGFkZGluZ0xlZnQ6IChQQURESU5HX0lOSVRJQUwgKyBkZXB0aCpERVBUSF9QQURESU5HKVxuICAgICAgICB9O1xuXG4gICAgICAgIGxldCBjbGFzc05hbWUgPSBjbGFzc05hbWVzKCdUcmVlTGVhZicsIHN0YXR1cz8gJ3N0YXR1cy0nICsgc3RhdHVzIDogJycpO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8YSBjbGFzc05hbWU9e2NsYXNzTmFtZX0gaHJlZj17aHJlZn0gc3R5bGU9e3N0eWxlfT5cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuLyoqXG4gKiBMaXR0bGUgdHJpYW5nbGUgdG8gdG9nZ2xlIHN1Yi10cmVlLlxuICogSW5zZXJ0IGEgVHJlZVRvZ2dsZSBpbiBhIFRyZWVMZWFmXG4gKi9cbmNvbnN0IFRyZWVUb2dnbGUgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcHJvcFR5cGVzOiB7XG4gICAgICAgIGFjdGl2ZTogIFJlYWN0LlByb3BUeXBlcy5ib29sLFxuICAgICAgICBvbkNsaWNrOiBSZWFjdC5Qcm9wVHlwZXMuZnVuY1xuICAgIH0sXG5cbiAgICBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHsgb25DbGljayB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgICBpZiAob25DbGljaykgb25DbGljaygpO1xuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgYWN0aXZlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgY2xhc3NOYW1lID0gY2xhc3NOYW1lcygnVHJlZVRvZ2dsZScsIHtcbiAgICAgICAgICAgIGFjdGl2ZVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgICAgICAgICAgIDxJY29uIGlkPXthY3RpdmU/ICd0cmlhbmdsZS1kb3duJyA6ICd0cmlhbmdsZS1yaWdodCd9IC8+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVHJlZTtcbm1vZHVsZS5leHBvcnRzLk5vZGUgPSBUcmVlTm9kZTtcbm1vZHVsZS5leHBvcnRzLkxlYWYgPSBUcmVlTGVhZjtcbm1vZHVsZS5leHBvcnRzLlRvZ2dsZSA9IFRyZWVUb2dnbGU7XG4iXX0=