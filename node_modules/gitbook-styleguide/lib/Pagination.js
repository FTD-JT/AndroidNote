'use strict';

var React = require('react');
var classNames = require('classnames');

var Pagination = React.createClass({
    displayName: 'Pagination',
    getDefaultProps: function getDefaultProps() {
        return {
            getURL: function getURL(page) {
                return '?page=' + page;
            },
            pagesToList: 5
        };
    },


    /**
     * Clicked to select a page
     * @param  {Number} i
     */
    onSelectPage: function onSelectPage(i, e) {
        if (this.props.onChange) {
            e.preventDefault();
            return this.props.onChange(i);
        }
    },


    /**
     * Render a page selector
     * @param {Number} i
     * @param {String} text
     * @return {React.Element}
     */
    renderPageItem: function renderPageItem(i, text) {
        var page = this.props.page;
        var isActive = i === page;
        var className = classNames({
            active: isActive
        });
        var uri = this.props.getURL(i);

        return React.createElement(
            'li',
            { key: i, className: className },
            React.createElement(
                'a',
                { href: uri, onClick: this.onSelectPage.bind(this, i) },
                text || i
            )
        );
    },
    render: function render() {
        var page = this.props.page;
        var pages = this.props.pages;
        var pagesToList = this.props.pagesToList;

        if (pages < 2) {
            return React.createElement('div', null);
        }

        if (page < 0) page = 0;
        if (page >= pages) page = pages - 1;

        var startRange = Math.max(0, page - pagesToList);
        var maxRange = pages;
        var endRange = Math.min(maxRange, page + pagesToList);
        var pagesRange = Array.from(Array(pages)).map(Number.call, Number).slice(startRange, endRange);

        return React.createElement(
            'div',
            { className: 'pagination' },
            React.createElement(
                'ul',
                { className: 'pagination-pages' },
                startRange === 0 ? '' : this.renderPageItem(0),
                startRange === 0 ? '' : React.createElement(
                    'li',
                    null,
                    React.createElement(
                        'span',
                        { className: 'separator' },
                        '...'
                    )
                ),
                pagesRange.map(function (i) {
                    return this.renderPageItem(i);
                }, this),
                endRange === maxRange ? '' : React.createElement(
                    'li',
                    null,
                    React.createElement(
                        'span',
                        { className: 'separator' },
                        '...'
                    )
                ),
                endRange === maxRange ? '' : this.renderPageItem(maxRange)
            ),
            React.createElement(
                'ul',
                { className: 'pagination-nav' },
                page < 1 ? '' : this.renderPageItem(page - 1, '« previous page'),
                page >= maxRange - 1 ? '' : this.renderPageItem(page + 1, 'next page »')
            )
        );
    }
});

module.exports = Pagination;
//# sourceMappingURL=data:application/json;base64,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QTtBQUFKLGlCQVJqQztBQVNLLDZCQUFhLFFBQWIsR0FBdUIsRUFBdkIsR0FBNEIsS0FBSyxjQUFMLENBQW9CLFFBQXBCO0FBVGpDLGFBREo7QUFZSTtBQUFBO0FBQUEsa0JBQUksV0FBVSxnQkFBZDtBQUNLLHVCQUFPLENBQVAsR0FBVSxFQUFWLEdBQWUsS0FBSyxjQUFMLENBQW9CLE9BQU8sQ0FBM0IsRUFBOEIsaUJBQTlCLENBRHBCO0FBRUssd0JBQVMsV0FBVyxDQUFwQixHQUF3QixFQUF4QixHQUE2QixLQUFLLGNBQUwsQ0FBb0IsT0FBTyxDQUEzQixFQUE4QixhQUE5QjtBQUZsQztBQVpKLFNBREo7QUFtQkg7QUEzRmdDLENBQWxCLENBQW5COztBQThGQSxPQUFPLE9BQVAsR0FBaUIsVUFBakIiLCJmaWxlIjoiUGFnaW5hdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IGNsYXNzTmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XG5cbmNvbnN0IFBhZ2luYXRpb24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcHJvcFR5cGVzOiB7XG4gICAgICAgIC8vIEluZGV4IG9mIGN1cnJlbnQgcGFnZVxuICAgICAgICBwYWdlOiAgICAgICAgICAgUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuXG4gICAgICAgIC8vIFRvdGFsIGNvdW50IG9mIHBhZ2VzXG4gICAgICAgIHBhZ2VzOiAgICAgICAgICBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG5cbiAgICAgICAgLy8gTWluaW11bSBudW1iZXIgb2YgcGFnZXMgdG8gbGlzdFxuICAgICAgICBwYWdlc1RvTGlzdDogICAgUmVhY3QuUHJvcFR5cGVzLm51bWJlcixcblxuICAgICAgICAvLyBDYWxsYmFjayB3aGVuIHBhZ2UgY2hhbmdlZCAob3B0aW9uYWwpXG4gICAgICAgIG9uQ2hhbmdlOiAgICAgICBSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcblxuICAgICAgICAvLyBDdXJyZW50IHVyaVxuICAgICAgICBnZXRVUkw6ICAgICAgICAgUmVhY3QuUHJvcFR5cGVzLmZ1bmNcbiAgICB9LFxuXG4gICAgZ2V0RGVmYXVsdFByb3BzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZ2V0VVJMOiAgICAgIChwYWdlID0+ICc/cGFnZT0nICsgcGFnZSksXG4gICAgICAgICAgICBwYWdlc1RvTGlzdDogNVxuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDbGlja2VkIHRvIHNlbGVjdCBhIHBhZ2VcbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IGlcbiAgICAgKi9cbiAgICBvblNlbGVjdFBhZ2UoaSwgZSkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5vbkNoYW5nZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMub25DaGFuZ2UoaSk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUmVuZGVyIGEgcGFnZSBzZWxlY3RvclxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBpXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHRleHRcbiAgICAgKiBAcmV0dXJuIHtSZWFjdC5FbGVtZW50fVxuICAgICAqL1xuICAgIHJlbmRlclBhZ2VJdGVtKGksIHRleHQpIHtcbiAgICAgICAgY29uc3QgcGFnZSAgICAgID0gdGhpcy5wcm9wcy5wYWdlO1xuICAgICAgICBjb25zdCBpc0FjdGl2ZSAgPSAoaSA9PT0gcGFnZSk7XG4gICAgICAgIGNvbnN0IGNsYXNzTmFtZSA9IGNsYXNzTmFtZXMoe1xuICAgICAgICAgICAgYWN0aXZlOiBpc0FjdGl2ZVxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgdXJpID0gdGhpcy5wcm9wcy5nZXRVUkwoaSk7XG5cbiAgICAgICAgcmV0dXJuIDxsaSBrZXk9e2l9IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgICAgICAgIDxhIGhyZWY9e3VyaX0gb25DbGljaz17dGhpcy5vblNlbGVjdFBhZ2UuYmluZCh0aGlzLCBpKX0+e3RleHQgfHwgaX08L2E+XG4gICAgICAgIDwvbGk+O1xuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBwYWdlICAgICAgICA9IHRoaXMucHJvcHMucGFnZTtcbiAgICAgICAgY29uc3QgcGFnZXMgICAgICAgPSB0aGlzLnByb3BzLnBhZ2VzO1xuICAgICAgICBjb25zdCBwYWdlc1RvTGlzdCA9IHRoaXMucHJvcHMucGFnZXNUb0xpc3Q7XG5cbiAgICAgICAgaWYgKHBhZ2VzIDwgMikge1xuICAgICAgICAgICAgcmV0dXJuIDxkaXYgLz47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGFnZSA8IDApIHBhZ2UgPSAwO1xuICAgICAgICBpZiAocGFnZSA+PSBwYWdlcykgcGFnZSA9IChwYWdlcyAtIDEpO1xuXG4gICAgICAgIGNvbnN0IHN0YXJ0UmFuZ2UgPSBNYXRoLm1heCgwLCBwYWdlIC0gcGFnZXNUb0xpc3QpO1xuICAgICAgICBjb25zdCBtYXhSYW5nZSAgID0gcGFnZXM7XG4gICAgICAgIGNvbnN0IGVuZFJhbmdlICAgPSBNYXRoLm1pbihtYXhSYW5nZSwgcGFnZSArIHBhZ2VzVG9MaXN0KTtcbiAgICAgICAgY29uc3QgcGFnZXNSYW5nZSA9IEFycmF5LmZyb20oQXJyYXkocGFnZXMpKS5tYXAoTnVtYmVyLmNhbGwsIE51bWJlcikuc2xpY2Uoc3RhcnRSYW5nZSwgZW5kUmFuZ2UpO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhZ2luYXRpb25cIj5cbiAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwicGFnaW5hdGlvbi1wYWdlc1wiPlxuICAgICAgICAgICAgICAgICAgICB7c3RhcnRSYW5nZSA9PT0gMD8gJycgOiB0aGlzLnJlbmRlclBhZ2VJdGVtKDApfVxuICAgICAgICAgICAgICAgICAgICB7c3RhcnRSYW5nZSA9PT0gMD8gJycgOiA8bGk+PHNwYW4gY2xhc3NOYW1lPVwic2VwYXJhdG9yXCI+Li4uPC9zcGFuPjwvbGk+fVxuXG4gICAgICAgICAgICAgICAgICAgIHtwYWdlc1JhbmdlLm1hcChmdW5jdGlvbihpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJQYWdlSXRlbShpKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgdGhpcyl9XG5cbiAgICAgICAgICAgICAgICAgICAge2VuZFJhbmdlID09PSBtYXhSYW5nZT8gJycgOiA8bGk+PHNwYW4gY2xhc3NOYW1lPVwic2VwYXJhdG9yXCI+Li4uPC9zcGFuPjwvbGk+fVxuICAgICAgICAgICAgICAgICAgICB7ZW5kUmFuZ2UgPT09IG1heFJhbmdlPyAnJyA6IHRoaXMucmVuZGVyUGFnZUl0ZW0obWF4UmFuZ2UpfVxuICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cInBhZ2luYXRpb24tbmF2XCI+XG4gICAgICAgICAgICAgICAgICAgIHtwYWdlIDwgMT8gJycgOiB0aGlzLnJlbmRlclBhZ2VJdGVtKHBhZ2UgLSAxLCAnwqsgcHJldmlvdXMgcGFnZScpfVxuICAgICAgICAgICAgICAgICAgICB7cGFnZSA+PSAobWF4UmFuZ2UgLSAxKT8gJycgOiB0aGlzLnJlbmRlclBhZ2VJdGVtKHBhZ2UgKyAxLCAnbmV4dCBwYWdlIMK7Jyl9XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBhZ2luYXRpb247XG4iXX0=