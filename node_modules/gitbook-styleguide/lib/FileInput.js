'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');
var Button = require('./Button');

var FileInput = React.createClass({
    displayName: 'FileInput',


    /**
     * Click this button
     */
    click: function click() {
        this.refs.input.click();
    },
    onChange: function onChange(e) {
        if (this.props.onChange) {
            this.props.onChange(e);
        }
    },
    render: function render() {
        return React.createElement(
            Button,
            _extends({}, this.props, { onClick: this.click }),
            React.createElement('input', { type: 'file', ref: 'input', name: this.props.name, style: { display: 'none' }, accept: this.props.accept }),
            this.props.children
        );
    }
});

module.exports = FileInput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9GaWxlSW5wdXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQU0sUUFBUSxRQUFRLE9BQVIsQ0FBZDtBQUNBLElBQU0sU0FBUyxRQUFRLFVBQVIsQ0FBZjs7QUFFQSxJQUFNLFlBQVksTUFBTSxXQUFOLENBQWtCO0FBQUE7OztBQVNoQzs7O0FBR0EsU0FaZ0MsbUJBWXhCO0FBQ0osYUFBSyxJQUFMLENBQVUsS0FBVixDQUFnQixLQUFoQjtBQUNILEtBZCtCO0FBZ0JoQyxZQWhCZ0Msb0JBZ0J2QixDQWhCdUIsRUFnQnBCO0FBQ1IsWUFBSSxLQUFLLEtBQUwsQ0FBVyxRQUFmLEVBQXlCO0FBQ3JCLGlCQUFLLEtBQUwsQ0FBVyxRQUFYLENBQW9CLENBQXBCO0FBQ0g7QUFDSixLQXBCK0I7QUFzQmhDLFVBdEJnQyxvQkFzQnZCO0FBQ0wsZUFDSTtBQUFDLGtCQUFEO0FBQUEseUJBQVksS0FBSyxLQUFqQixJQUF3QixTQUFTLEtBQUssS0FBdEM7QUFDSSwyQ0FBTyxNQUFLLE1BQVosRUFBbUIsS0FBSSxPQUF2QixFQUErQixNQUFNLEtBQUssS0FBTCxDQUFXLElBQWhELEVBQXNELE9BQU8sRUFBQyxTQUFTLE1BQVYsRUFBN0QsRUFBZ0YsUUFBUSxLQUFLLEtBQUwsQ0FBVyxNQUFuRyxHQURKO0FBRUssaUJBQUssS0FBTCxDQUFXO0FBRmhCLFNBREo7QUFNSDtBQTdCK0IsQ0FBbEIsQ0FBbEI7O0FBZ0NBLE9BQU8sT0FBUCxHQUFpQixTQUFqQiIsImZpbGUiOiJGaWxlSW5wdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBCdXR0b24gPSByZXF1aXJlKCcuL0J1dHRvbicpO1xuXG5jb25zdCBGaWxlSW5wdXQgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcHJvcFR5cGVzOiB7XG4gICAgICAgIGNoaWxkcmVuOiBSZWFjdC5Qcm9wVHlwZXMubm9kZSxcbiAgICAgICAgb25DaGFuZ2U6IFJlYWN0LlByb3BUeXBlcy5mdW5jLFxuICAgICAgICBuYW1lOiAgICAgUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgYWNjZXB0OiAgIFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIGRpc2FibGVkOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbFxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDbGljayB0aGlzIGJ1dHRvblxuICAgICAqL1xuICAgIGNsaWNrKCkge1xuICAgICAgICB0aGlzLnJlZnMuaW5wdXQuY2xpY2soKTtcbiAgICB9LFxuXG4gICAgb25DaGFuZ2UoZSkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5vbkNoYW5nZSkge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZShlKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8QnV0dG9uIHsuLi50aGlzLnByb3BzfSBvbkNsaWNrPXt0aGlzLmNsaWNrfT5cbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImZpbGVcIiByZWY9XCJpbnB1dFwiIG5hbWU9e3RoaXMucHJvcHMubmFtZX0gc3R5bGU9e3tkaXNwbGF5OiAnbm9uZSd9fSBhY2NlcHQ9e3RoaXMucHJvcHMuYWNjZXB0fSAvPlxuICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gRmlsZUlucHV0O1xuIl19