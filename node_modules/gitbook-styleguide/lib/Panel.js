'use strict';

var React = require('react');
var classNames = require('classnames');

var STYLES = require('./STYLES');

var Panel = React.createClass({
    displayName: 'Panel',
    getDefaultProps: function getDefaultProps() {
        return {
            style: STYLES[0]
        };
    },
    render: function render() {
        var style = this.props.style;

        return React.createElement(
            'div',
            { className: classNames('panel', 'panel-' + style) },
            this.props.children
        );
    }
});

var PanelHeading = React.createClass({
    displayName: 'PanelHeading',
    render: function render() {
        var title = this.props.title;
        var inner = '';

        if (title) {
            inner = React.createElement(
                PanelTitle,
                null,
                title
            );
        }

        return React.createElement(
            'div',
            { className: 'panel-heading' },
            inner,
            this.props.children
        );
    }
});

var PanelTitle = React.createClass({
    displayName: 'PanelTitle',
    render: function render() {
        return React.createElement(
            'h3',
            { className: 'panel-title' },
            this.props.children
        );
    }
});

var PanelToolbar = React.createClass({
    displayName: 'PanelToolbar',
    render: function render() {
        return React.createElement(
            'div',
            { className: 'panel-toolbar' },
            this.props.children
        );
    }
});

var PanelBody = React.createClass({
    displayName: 'PanelBody',
    render: function render() {
        return React.createElement(
            'div',
            { className: 'panel-body' },
            this.props.children
        );
    }
});

var PanelFooter = React.createClass({
    displayName: 'PanelFooter',
    render: function render() {
        return React.createElement(
            'div',
            { className: 'panel-footer' },
            this.props.children
        );
    }
});

module.exports = Panel;
module.exports.Heading = PanelHeading;
module.exports.Title = PanelTitle;
module.exports.Body = PanelBody;
module.exports.Footer = PanelFooter;
module.exports.Toolbar = PanelToolbar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9QYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sUUFBUSxRQUFRLE9BQVIsQ0FBZDtBQUNBLElBQU0sYUFBYSxRQUFRLFlBQVIsQ0FBbkI7O0FBRUEsSUFBTSxTQUFTLFFBQVEsVUFBUixDQUFmOztBQUVBLElBQU0sUUFBUSxNQUFNLFdBQU4sQ0FBa0I7QUFBQTtBQU01QixtQkFONEIsNkJBTVY7QUFDZCxlQUFPO0FBQ0gsbUJBQU8sT0FBTyxDQUFQO0FBREosU0FBUDtBQUdILEtBVjJCO0FBWTVCLFVBWjRCLG9CQVluQjtBQUNMLFlBQU0sUUFBUSxLQUFLLEtBQUwsQ0FBVyxLQUF6Qjs7QUFFQSxlQUNJO0FBQUE7QUFBQSxjQUFLLFdBQVcsV0FBVyxPQUFYLEVBQW9CLFdBQVcsS0FBL0IsQ0FBaEI7QUFDSyxpQkFBSyxLQUFMLENBQVc7QUFEaEIsU0FESjtBQUtIO0FBcEIyQixDQUFsQixDQUFkOztBQXVCQSxJQUFNLGVBQWUsTUFBTSxXQUFOLENBQWtCO0FBQUE7QUFNbkMsVUFObUMsb0JBTTFCO0FBQ0wsWUFBTSxRQUFRLEtBQUssS0FBTCxDQUFXLEtBQXpCO0FBQ0EsWUFBSSxRQUFRLEVBQVo7O0FBRUEsWUFBSSxLQUFKLEVBQVc7QUFDUCxvQkFBUTtBQUFDLDBCQUFEO0FBQUE7QUFBYTtBQUFiLGFBQVI7QUFDSDs7QUFFRCxlQUNJO0FBQUE7QUFBQSxjQUFLLFdBQVUsZUFBZjtBQUNLLGlCQURMO0FBRUssaUJBQUssS0FBTCxDQUFXO0FBRmhCLFNBREo7QUFNSDtBQXBCa0MsQ0FBbEIsQ0FBckI7O0FBdUJBLElBQU0sYUFBYSxNQUFNLFdBQU4sQ0FBa0I7QUFBQTtBQUtqQyxVQUxpQyxvQkFLeEI7QUFDTCxlQUNJO0FBQUE7QUFBQSxjQUFJLFdBQVUsYUFBZDtBQUNLLGlCQUFLLEtBQUwsQ0FBVztBQURoQixTQURKO0FBS0g7QUFYZ0MsQ0FBbEIsQ0FBbkI7O0FBY0EsSUFBTSxlQUFlLE1BQU0sV0FBTixDQUFrQjtBQUFBO0FBS25DLFVBTG1DLG9CQUsxQjtBQUNMLGVBQ0k7QUFBQTtBQUFBLGNBQUssV0FBVSxlQUFmO0FBQ0ssaUJBQUssS0FBTCxDQUFXO0FBRGhCLFNBREo7QUFLSDtBQVhrQyxDQUFsQixDQUFyQjs7QUFjQSxJQUFNLFlBQVksTUFBTSxXQUFOLENBQWtCO0FBQUE7QUFLaEMsVUFMZ0Msb0JBS3ZCO0FBQ0wsZUFDSTtBQUFBO0FBQUEsY0FBSyxXQUFVLFlBQWY7QUFDSyxpQkFBSyxLQUFMLENBQVc7QUFEaEIsU0FESjtBQUtIO0FBWCtCLENBQWxCLENBQWxCOztBQWNBLElBQU0sY0FBYyxNQUFNLFdBQU4sQ0FBa0I7QUFBQTtBQUtsQyxVQUxrQyxvQkFLekI7QUFDTCxlQUNJO0FBQUE7QUFBQSxjQUFLLFdBQVUsY0FBZjtBQUNLLGlCQUFLLEtBQUwsQ0FBVztBQURoQixTQURKO0FBS0g7QUFYaUMsQ0FBbEIsQ0FBcEI7O0FBY0EsT0FBTyxPQUFQLEdBQXlCLEtBQXpCO0FBQ0EsT0FBTyxPQUFQLENBQWUsT0FBZixHQUF5QixZQUF6QjtBQUNBLE9BQU8sT0FBUCxDQUFlLEtBQWYsR0FBeUIsVUFBekI7QUFDQSxPQUFPLE9BQVAsQ0FBZSxJQUFmLEdBQXlCLFNBQXpCO0FBQ0EsT0FBTyxPQUFQLENBQWUsTUFBZixHQUF5QixXQUF6QjtBQUNBLE9BQU8sT0FBUCxDQUFlLE9BQWYsR0FBeUIsWUFBekIiLCJmaWxlIjoiUGFuZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBjbGFzc05hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuXG5jb25zdCBTVFlMRVMgPSByZXF1aXJlKCcuL1NUWUxFUycpO1xuXG5jb25zdCBQYW5lbCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBwcm9wVHlwZXM6IHtcbiAgICAgICAgc3R5bGU6IFJlYWN0LlByb3BUeXBlcy5vbmVPZihTVFlMRVMpLFxuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGVcbiAgICB9LFxuXG4gICAgZ2V0RGVmYXVsdFByb3BzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3R5bGU6IFNUWUxFU1swXVxuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHN0eWxlID0gdGhpcy5wcm9wcy5zdHlsZTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ3BhbmVsJywgJ3BhbmVsLScgKyBzdHlsZSl9PlxuICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbmNvbnN0IFBhbmVsSGVhZGluZyA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBwcm9wVHlwZXM6IHtcbiAgICAgICAgdGl0bGU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIGNoaWxkcmVuOiBSZWFjdC5Qcm9wVHlwZXMubm9kZVxuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHRpdGxlID0gdGhpcy5wcm9wcy50aXRsZTtcbiAgICAgICAgbGV0IGlubmVyID0gJyc7XG5cbiAgICAgICAgaWYgKHRpdGxlKSB7XG4gICAgICAgICAgICBpbm5lciA9IDxQYW5lbFRpdGxlPnt0aXRsZX08L1BhbmVsVGl0bGU+O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGFuZWwtaGVhZGluZ1wiPlxuICAgICAgICAgICAgICAgIHtpbm5lcn1cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG5jb25zdCBQYW5lbFRpdGxlID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHByb3BUeXBlczoge1xuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGVcbiAgICB9LFxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInBhbmVsLXRpdGxlXCI+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgICAgICA8L2gzPlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG5jb25zdCBQYW5lbFRvb2xiYXIgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcHJvcFR5cGVzOiB7XG4gICAgICAgIGNoaWxkcmVuOiBSZWFjdC5Qcm9wVHlwZXMubm9kZVxuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhbmVsLXRvb2xiYXJcIj5cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG5jb25zdCBQYW5lbEJvZHkgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcHJvcFR5cGVzOiB7XG4gICAgICAgIGNoaWxkcmVuOiBSZWFjdC5Qcm9wVHlwZXMubm9kZVxuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhbmVsLWJvZHlcIj5cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG5jb25zdCBQYW5lbEZvb3RlciA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBwcm9wVHlwZXM6IHtcbiAgICAgICAgY2hpbGRyZW46IFJlYWN0LlByb3BUeXBlcy5ub2RlXG4gICAgfSxcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGFuZWwtZm9vdGVyXCI+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgICAgICAgICA9IFBhbmVsO1xubW9kdWxlLmV4cG9ydHMuSGVhZGluZyA9IFBhbmVsSGVhZGluZztcbm1vZHVsZS5leHBvcnRzLlRpdGxlICAgPSBQYW5lbFRpdGxlO1xubW9kdWxlLmV4cG9ydHMuQm9keSAgICA9IFBhbmVsQm9keTtcbm1vZHVsZS5leHBvcnRzLkZvb3RlciAgPSBQYW5lbEZvb3Rlcjtcbm1vZHVsZS5leHBvcnRzLlRvb2xiYXIgPSBQYW5lbFRvb2xiYXI7XG4iXX0=