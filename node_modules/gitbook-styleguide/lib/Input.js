'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');
var classNames = require('classnames');

var SIZES = require('./SIZES');

var Input = React.createClass({
    displayName: 'Input',


    /**
     * Focus this input
     */
    focus: function focus() {
        this.refs.input.focus();
    },
    getDefaultProps: function getDefaultProps() {
        return {
            type: 'text',
            size: SIZES[0]
        };
    },
    onChange: function onChange(e) {
        if (this.props.onChange) {
            this.props.onChange(e);
        }
    },
    render: function render() {
        var _props = this.props;
        var onBlur = _props.onBlur;
        var onFocus = _props.onFocus;
        var onKeyDown = _props.onKeyDown;
        var onClick = _props.onClick;
        var value = _props.value;
        var readOnly = _props.readOnly;
        var defaultValue = _props.defaultValue;
        var size = _props.size;
        var autoFocus = _props.autoFocus;
        var placeholder = _props.placeholder;
        var type = _props.type;
        var name = _props.name;
        var disabled = _props.disabled;


        var className = classNames('form-control', 'input-' + size, this.props.className);

        return React.createElement('input', { ref: 'input',
            type: type, autoFocus: autoFocus,
            className: className, disabled: disabled, readOnly: readOnly,
            name: name, value: value, defaultValue: defaultValue,
            placeholder: placeholder,
            onFocus: onFocus,
            onBlur: onBlur,
            onKeyDown: onKeyDown,
            onClick: onClick,
            onChange: this.onChange
        });
    }
});

/**
 * Create a style of alert
 * @param {String} style
 * @return {React.Component}
 */
function createInputType(type) {
    return React.createClass({
        displayName: Input.displayName + type,
        render: function render() {
            return React.createElement(Input, _extends({}, this.props, { type: type.toLowerCase() }));
        }
    });
}

var InputGroup = React.createClass({
    displayName: 'InputGroup',
    render: function render() {
        var className = classNames('input-group', this.props.className || []);
        return React.createElement(
            'div',
            { className: className },
            this.props.children
        );
    }
});

var InputGroupAddon = React.createClass({
    displayName: 'InputGroupAddon',
    render: function render() {
        return React.createElement(
            'span',
            _extends({}, this.props, { className: 'input-group-addon' }),
            this.props.children
        );
    }
});

module.exports = Input;
module.exports.Email = createInputType('Email');
module.exports.Password = createInputType('Password');
module.exports.Group = InputGroup;
module.exports.GroupAddon = InputGroupAddon;
//# sourceMappingURL=data:application/json;base64,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LG1CQUFoQztBQUNLLGlCQUFLLEtBQUwsQ0FBVztBQURoQixTQURKO0FBS0g7QUFYcUMsQ0FBbEIsQ0FBeEI7O0FBY0EsT0FBTyxPQUFQLEdBQTRCLEtBQTVCO0FBQ0EsT0FBTyxPQUFQLENBQWUsS0FBZixHQUE0QixnQkFBZ0IsT0FBaEIsQ0FBNUI7QUFDQSxPQUFPLE9BQVAsQ0FBZSxRQUFmLEdBQTRCLGdCQUFnQixVQUFoQixDQUE1QjtBQUNBLE9BQU8sT0FBUCxDQUFlLEtBQWYsR0FBNEIsVUFBNUI7QUFDQSxPQUFPLE9BQVAsQ0FBZSxVQUFmLEdBQTRCLGVBQTVCIiwiZmlsZSI6IklucHV0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgY2xhc3NOYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcblxuY29uc3QgU0laRVMgPSByZXF1aXJlKCcuL1NJWkVTJyk7XG5cbmNvbnN0IElucHV0ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHByb3BUeXBlczoge1xuICAgICAgICBjbGFzc05hbWU6ICAgIFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIG9uQ2hhbmdlOiAgICAgUmVhY3QuUHJvcFR5cGVzLmZ1bmMsXG4gICAgICAgIG9uRm9jdXM6ICAgICAgUmVhY3QuUHJvcFR5cGVzLmZ1bmMsXG4gICAgICAgIG9uQmx1cjogICAgICAgUmVhY3QuUHJvcFR5cGVzLmZ1bmMsXG4gICAgICAgIG9uS2V5RG93bjogICAgUmVhY3QuUHJvcFR5cGVzLmZ1bmMsXG4gICAgICAgIG9uQ2xpY2s6ICAgICAgUmVhY3QuUHJvcFR5cGVzLmZ1bmMsXG4gICAgICAgIG5hbWU6ICAgICAgICAgUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgdHlwZTogICAgICAgICBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICBwbGFjZWhvbGRlcjogIFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIGRpc2FibGVkOiAgICAgUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gICAgICAgIHJlYWRPbmx5OiAgICAgUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gICAgICAgIGF1dG9Gb2N1czogICAgUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gICAgICAgIHNpemU6ICAgICAgICAgUmVhY3QuUHJvcFR5cGVzLm9uZU9mKFNJWkVTKSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICB2YWx1ZTogICAgICAgIFJlYWN0LlByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgICAgICAgUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgICAgIFJlYWN0LlByb3BUeXBlcy5ib29sXG4gICAgICAgIF0pXG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEZvY3VzIHRoaXMgaW5wdXRcbiAgICAgKi9cbiAgICBmb2N1cygpIHtcbiAgICAgICAgdGhpcy5yZWZzLmlucHV0LmZvY3VzKCk7XG4gICAgfSxcblxuICAgIGdldERlZmF1bHRQcm9wcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICAgIHNpemU6IFNJWkVTWzBdXG4gICAgICAgIH07XG4gICAgfSxcblxuICAgIG9uQ2hhbmdlKGUpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMub25DaGFuZ2UpIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UoZSk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IG9uQmx1ciwgb25Gb2N1cywgb25LZXlEb3duLCBvbkNsaWNrLCB2YWx1ZSwgcmVhZE9ubHksIGRlZmF1bHRWYWx1ZSxcbiAgICAgICAgICAgIHNpemUsIGF1dG9Gb2N1cywgcGxhY2Vob2xkZXIsIHR5cGUsXG4gICAgICAgICAgICBuYW1lLCBkaXNhYmxlZCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBjb25zdCBjbGFzc05hbWUgPSBjbGFzc05hbWVzKCdmb3JtLWNvbnRyb2wnLCAnaW5wdXQtJyArIHNpemUsIHRoaXMucHJvcHMuY2xhc3NOYW1lKTtcblxuICAgICAgICByZXR1cm4gPGlucHV0IHJlZj1cImlucHV0XCJcbiAgICAgICAgICAgIHR5cGU9e3R5cGV9IGF1dG9Gb2N1cz17YXV0b0ZvY3VzfVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWV9IGRpc2FibGVkPXtkaXNhYmxlZH0gcmVhZE9ubHk9e3JlYWRPbmx5fVxuICAgICAgICAgICAgbmFtZT17bmFtZX0gdmFsdWU9e3ZhbHVlfSBkZWZhdWx0VmFsdWU9e2RlZmF1bHRWYWx1ZX1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cbiAgICAgICAgICAgIG9uRm9jdXM9e29uRm9jdXN9XG4gICAgICAgICAgICBvbkJsdXI9e29uQmx1cn1cbiAgICAgICAgICAgIG9uS2V5RG93bj17b25LZXlEb3dufVxuICAgICAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uQ2hhbmdlfVxuICAgICAgICAvPjtcbiAgICB9XG59KTtcblxuXG4vKipcbiAqIENyZWF0ZSBhIHN0eWxlIG9mIGFsZXJ0XG4gKiBAcGFyYW0ge1N0cmluZ30gc3R5bGVcbiAqIEByZXR1cm4ge1JlYWN0LkNvbXBvbmVudH1cbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5wdXRUeXBlKHR5cGUpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgICAgICBkaXNwbGF5TmFtZTogSW5wdXQuZGlzcGxheU5hbWUgKyB0eXBlLFxuICAgICAgICByZW5kZXIoKSB7XG4gICAgICAgICAgICByZXR1cm4gPElucHV0IHsuLi50aGlzLnByb3BzfSB0eXBlPXt0eXBlLnRvTG93ZXJDYXNlKCl9IC8+O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbmNvbnN0IElucHV0R3JvdXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcHJvcFR5cGVzOiB7XG4gICAgICAgIGNoaWxkcmVuOiAgUmVhY3QuUHJvcFR5cGVzLm5vZGUsXG4gICAgICAgIGNsYXNzTmFtZTogUmVhY3QuUHJvcFR5cGVzLnN0cmluZ1xuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IGNsYXNzTmFtZSA9IGNsYXNzTmFtZXMoJ2lucHV0LWdyb3VwJywgdGhpcy5wcm9wcy5jbGFzc05hbWUgfHwgW10pO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZX0+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuY29uc3QgSW5wdXRHcm91cEFkZG9uID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHByb3BUeXBlczoge1xuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGVcbiAgICB9LFxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPHNwYW4gey4uLnRoaXMucHJvcHN9IGNsYXNzTmFtZT1cImlucHV0LWdyb3VwLWFkZG9uXCI+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzICAgICAgICAgICAgPSBJbnB1dDtcbm1vZHVsZS5leHBvcnRzLkVtYWlsICAgICAgPSBjcmVhdGVJbnB1dFR5cGUoJ0VtYWlsJyk7XG5tb2R1bGUuZXhwb3J0cy5QYXNzd29yZCAgID0gY3JlYXRlSW5wdXRUeXBlKCdQYXNzd29yZCcpO1xubW9kdWxlLmV4cG9ydHMuR3JvdXAgICAgICA9IElucHV0R3JvdXA7XG5tb2R1bGUuZXhwb3J0cy5Hcm91cEFkZG9uID0gSW5wdXRHcm91cEFkZG9uO1xuIl19