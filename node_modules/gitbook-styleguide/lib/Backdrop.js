'use strict';

var React = require('react');

/**
 * Backdrop for modals, dropdown, popover.
 *
 *
 * For example:
 *
 * <Backdrop onClose={onClosePopover}>
 *      <Popover>...</Popover>
 * </Backdrop>
 */
var Backdrop = React.createClass({
    displayName: 'Backdrop',
    getDefaultProps: function getDefaultProps() {
        return {
            escape: true,
            zIndex: 200,
            wrapper: React.createElement('div', null)
        };
    },
    onClose: function onClose() {
        var onClose = this.props.onClose;

        onClose();
    },
    onKeyDown: function onKeyDown(event) {
        var escape = this.props.escape;


        if (event.keyCode === 27 && escape) {
            this.onClose();
        }
    },
    componentDidMount: function componentDidMount() {
        window.addEventListener('keydown', this.onKeyDown);
    },
    componentWillUnmount: function componentWillUnmount() {
        window.removeEventListener('keydown', this.onKeyDown);
    },
    render: function render() {
        var _props = this.props;
        var zIndex = _props.zIndex;
        var wrapper = _props.wrapper;

        var style = {
            zIndex: zIndex,
            position: 'fixed',
            top: 0,
            right: 0,
            width: '100%',
            height: '100%'
        };

        return React.cloneElement(wrapper, {}, React.createElement('div', { style: style, onClick: this.onClose }), wrapper.props.children, this.props.children);
    }
});

module.exports = Backdrop;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9CYWNrZHJvcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQU0sUUFBUSxRQUFRLE9BQVIsQ0FBZDs7QUFFQTs7Ozs7Ozs7OztBQVVBLElBQU0sV0FBVyxNQUFNLFdBQU4sQ0FBa0I7QUFBQTtBQVkvQixtQkFaK0IsNkJBWWI7QUFDZCxlQUFPO0FBQ0gsb0JBQVEsSUFETDtBQUVILG9CQUFRLEdBRkw7QUFHSCxxQkFBUztBQUhOLFNBQVA7QUFLSCxLQWxCOEI7QUFvQi9CLFdBcEIrQixxQkFvQnJCO0FBQUEsWUFDRSxPQURGLEdBQ2MsS0FBSyxLQURuQixDQUNFLE9BREY7O0FBRU47QUFDSCxLQXZCOEI7QUF5Qi9CLGFBekIrQixxQkF5QnJCLEtBekJxQixFQXlCZDtBQUFBLFlBQ0wsTUFESyxHQUNNLEtBQUssS0FEWCxDQUNMLE1BREs7OztBQUdiLFlBQUksTUFBTSxPQUFOLEtBQWtCLEVBQWxCLElBQXdCLE1BQTVCLEVBQW9DO0FBQ2hDLGlCQUFLLE9BQUw7QUFDSDtBQUNKLEtBL0I4QjtBQWlDL0IscUJBakMrQiwrQkFpQ1g7QUFDaEIsZUFBTyxnQkFBUCxDQUF3QixTQUF4QixFQUFtQyxLQUFLLFNBQXhDO0FBQ0gsS0FuQzhCO0FBcUMvQix3QkFyQytCLGtDQXFDUjtBQUNuQixlQUFPLG1CQUFQLENBQTJCLFNBQTNCLEVBQXNDLEtBQUssU0FBM0M7QUFDSCxLQXZDOEI7QUF5Qy9CLFVBekMrQixvQkF5Q3RCO0FBQUEscUJBQ3VCLEtBQUssS0FENUI7QUFBQSxZQUNHLE1BREgsVUFDRyxNQURIO0FBQUEsWUFDVyxPQURYLFVBQ1csT0FEWDs7QUFFTCxZQUFNLFFBQVE7QUFDViwwQkFEVTtBQUVWLHNCQUFVLE9BRkE7QUFHVixpQkFBSyxDQUhLO0FBSVYsbUJBQU8sQ0FKRztBQUtWLG1CQUFPLE1BTEc7QUFNVixvQkFBUTtBQU5FLFNBQWQ7O0FBU0EsZUFBTyxNQUFNLFlBQU4sQ0FBbUIsT0FBbkIsRUFBNEIsRUFBNUIsRUFDSCw2QkFBSyxPQUFPLEtBQVosRUFBbUIsU0FBUyxLQUFLLE9BQWpDLEdBREcsRUFFSCxRQUFRLEtBQVIsQ0FBYyxRQUZYLEVBR0gsS0FBSyxLQUFMLENBQVcsUUFIUixDQUFQO0FBS0g7QUF6RDhCLENBQWxCLENBQWpCOztBQTREQSxPQUFPLE9BQVAsR0FBaUIsUUFBakIiLCJmaWxlIjoiQmFja2Ryb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbi8qKlxuICogQmFja2Ryb3AgZm9yIG1vZGFscywgZHJvcGRvd24sIHBvcG92ZXIuXG4gKlxuICpcbiAqIEZvciBleGFtcGxlOlxuICpcbiAqIDxCYWNrZHJvcCBvbkNsb3NlPXtvbkNsb3NlUG9wb3Zlcn0+XG4gKiAgICAgIDxQb3BvdmVyPi4uLjwvUG9wb3Zlcj5cbiAqIDwvQmFja2Ryb3A+XG4gKi9cbmNvbnN0IEJhY2tkcm9wID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHByb3BUeXBlczoge1xuICAgICAgICAvLyBDbG9zZSBvbiBlc2NhcGVcbiAgICAgICAgZXNjYXBlOiAgIFJlYWN0LlByb3BUeXBlcy5ib29sLFxuICAgICAgICAvLyBaLWluZGV4IGZvciB0aGUgYmFja2Ryb3BcbiAgICAgICAgekluZGV4OiAgIFJlYWN0LlByb3BUeXBlcy5udW1iZXIsXG4gICAgICAgIC8vIENhbGxiYWNrIHdoZW4gYmFja2Ryb3AgaXMgY2xvc2VkXG4gICAgICAgIG9uQ2xvc2U6ICBSZWFjdC5Qcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGUuaXNSZXF1aXJlZCxcbiAgICAgICAgd3JhcHBlcjogIFJlYWN0LlByb3BUeXBlcy5ub2RlXG4gICAgfSxcblxuICAgIGdldERlZmF1bHRQcm9wcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVzY2FwZTogdHJ1ZSxcbiAgICAgICAgICAgIHpJbmRleDogMjAwLFxuICAgICAgICAgICAgd3JhcHBlcjogPGRpdiAvPlxuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICBvbkNsb3NlKCkge1xuICAgICAgICBjb25zdCB7IG9uQ2xvc2UgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIG9uQ2xvc2UoKTtcbiAgICB9LFxuXG4gICAgb25LZXlEb3duKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHsgZXNjYXBlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSAyNyAmJiBlc2NhcGUpIHtcbiAgICAgICAgICAgIHRoaXMub25DbG9zZSgpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMub25LZXlEb3duKTtcbiAgICB9LFxuXG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5vbktleURvd24pO1xuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgekluZGV4LCB3cmFwcGVyIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCBzdHlsZSA9IHtcbiAgICAgICAgICAgIHpJbmRleCxcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgICAgcmlnaHQ6IDAsXG4gICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJSdcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KHdyYXBwZXIsIHt9LFxuICAgICAgICAgICAgPGRpdiBzdHlsZT17c3R5bGV9IG9uQ2xpY2s9e3RoaXMub25DbG9zZX0+PC9kaXY+LFxuICAgICAgICAgICAgd3JhcHBlci5wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgICAgIHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBCYWNrZHJvcDtcbiJdfQ==