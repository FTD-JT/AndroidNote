'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = require('react');
var classNames = require('classnames');

var STYLES = require('./STYLES');

var Badge = React.createClass({
    displayName: 'Badge',
    getDefaultProps: function getDefaultProps() {
        return {
            style: STYLES[0]
        };
    },
    render: function render() {
        var style = this.props.style;
        var className = classNames('badge', 'badge-' + style, this.props.className);

        return React.createElement(
            'span',
            { className: className },
            this.props.children
        );
    }
});

/**
 * Create a style for badges
 * @param {String} style
 * @return {React.Component}
 */
function createBadgeStyle(style) {
    return React.createClass({
        displayName: Badge.displayName + style,
        render: function render() {
            return React.createElement(Badge, _extends({}, this.props, { style: style.toLowerCase() }));
        }
    });
}

module.exports = Badge;
module.exports.Info = createBadgeStyle('Info');
module.exports.Danger = createBadgeStyle('Danger');
module.exports.Success = createBadgeStyle('Success');
module.exports.Warning = createBadgeStyle('Warning');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9CYWRnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBTSxRQUFRLFFBQVEsT0FBUixDQUFkO0FBQ0EsSUFBTSxhQUFhLFFBQVEsWUFBUixDQUFuQjs7QUFFQSxJQUFNLFNBQVMsUUFBUSxVQUFSLENBQWY7O0FBRUEsSUFBTSxRQUFRLE1BQU0sV0FBTixDQUFrQjtBQUFBO0FBTzVCLG1CQVA0Qiw2QkFPVjtBQUNkLGVBQU87QUFDSCxtQkFBTyxPQUFPLENBQVA7QUFESixTQUFQO0FBR0gsS0FYMkI7QUFhNUIsVUFiNEIsb0JBYW5CO0FBQ0wsWUFBTSxRQUFZLEtBQUssS0FBTCxDQUFXLEtBQTdCO0FBQ0EsWUFBTSxZQUFZLFdBQVcsT0FBWCxFQUFvQixXQUFXLEtBQS9CLEVBQXNDLEtBQUssS0FBTCxDQUFXLFNBQWpELENBQWxCOztBQUVBLGVBQ0k7QUFBQTtBQUFBLGNBQU0sV0FBVyxTQUFqQjtBQUNLLGlCQUFLLEtBQUwsQ0FBVztBQURoQixTQURKO0FBS0g7QUF0QjJCLENBQWxCLENBQWQ7O0FBeUJBOzs7OztBQUtBLFNBQVMsZ0JBQVQsQ0FBMEIsS0FBMUIsRUFBaUM7QUFDN0IsV0FBTyxNQUFNLFdBQU4sQ0FBa0I7QUFDckIscUJBQWEsTUFBTSxXQUFOLEdBQW9CLEtBRFo7QUFFckIsY0FGcUIsb0JBRVo7QUFDTCxtQkFBTyxvQkFBQyxLQUFELGVBQVcsS0FBSyxLQUFoQixJQUF1QixPQUFPLE1BQU0sV0FBTixFQUE5QixJQUFQO0FBQ0g7QUFKb0IsS0FBbEIsQ0FBUDtBQU1IOztBQUVELE9BQU8sT0FBUCxHQUF5QixLQUF6QjtBQUNBLE9BQU8sT0FBUCxDQUFlLElBQWYsR0FBeUIsaUJBQWlCLE1BQWpCLENBQXpCO0FBQ0EsT0FBTyxPQUFQLENBQWUsTUFBZixHQUF5QixpQkFBaUIsUUFBakIsQ0FBekI7QUFDQSxPQUFPLE9BQVAsQ0FBZSxPQUFmLEdBQXlCLGlCQUFpQixTQUFqQixDQUF6QjtBQUNBLE9BQU8sT0FBUCxDQUFlLE9BQWYsR0FBeUIsaUJBQWlCLFNBQWpCLENBQXpCIiwiZmlsZSI6IkJhZGdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgY2xhc3NOYW1lcyA9IHJlcXVpcmUoJ2NsYXNzbmFtZXMnKTtcblxuY29uc3QgU1RZTEVTID0gcmVxdWlyZSgnLi9TVFlMRVMnKTtcblxuY29uc3QgQmFkZ2UgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcHJvcFR5cGVzOiB7XG4gICAgICAgIHN0eWxlOiBSZWFjdC5Qcm9wVHlwZXMub25lT2YoU1RZTEVTKSxcbiAgICAgICAgY2xhc3NOYW1lOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGVcbiAgICB9LFxuXG4gICAgZ2V0RGVmYXVsdFByb3BzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3R5bGU6IFNUWUxFU1swXVxuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHN0eWxlICAgICA9IHRoaXMucHJvcHMuc3R5bGU7XG4gICAgICAgIGNvbnN0IGNsYXNzTmFtZSA9IGNsYXNzTmFtZXMoJ2JhZGdlJywgJ2JhZGdlLScgKyBzdHlsZSwgdGhpcy5wcm9wcy5jbGFzc05hbWUpO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e2NsYXNzTmFtZX0+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbi8qKlxuICogQ3JlYXRlIGEgc3R5bGUgZm9yIGJhZGdlc1xuICogQHBhcmFtIHtTdHJpbmd9IHN0eWxlXG4gKiBAcmV0dXJuIHtSZWFjdC5Db21wb25lbnR9XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJhZGdlU3R5bGUoc3R5bGUpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgICAgICBkaXNwbGF5TmFtZTogQmFkZ2UuZGlzcGxheU5hbWUgKyBzdHlsZSxcbiAgICAgICAgcmVuZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIDxCYWRnZSB7Li4udGhpcy5wcm9wc30gc3R5bGU9e3N0eWxlLnRvTG93ZXJDYXNlKCl9IC8+O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzICAgICAgICAgPSBCYWRnZTtcbm1vZHVsZS5leHBvcnRzLkluZm8gICAgPSBjcmVhdGVCYWRnZVN0eWxlKCdJbmZvJyk7XG5tb2R1bGUuZXhwb3J0cy5EYW5nZXIgID0gY3JlYXRlQmFkZ2VTdHlsZSgnRGFuZ2VyJyk7XG5tb2R1bGUuZXhwb3J0cy5TdWNjZXNzID0gY3JlYXRlQmFkZ2VTdHlsZSgnU3VjY2VzcycpO1xubW9kdWxlLmV4cG9ydHMuV2FybmluZyA9IGNyZWF0ZUJhZGdlU3R5bGUoJ1dhcm5pbmcnKTtcbiJdfQ==