'use strict';

var React = require('react');
var classNames = require('classnames');

var MenuItem = React.createClass({
    displayName: 'MenuItem',
    getDefaultProps: function getDefaultProps() {
        return {
            active: false,
            href: null
        };
    },
    render: function render() {
        var inner = void 0;
        var className = classNames(this.props.className || '', {
            'active': this.props.active
        });

        if (this.props.href) {
            inner = React.createElement(
                'a',
                { href: this.props.href },
                this.props.children
            );
        } else {
            inner = React.createElement(
                'span',
                null,
                this.props.children
            );
        }

        return React.createElement(
            'li',
            { className: className },
            inner
        );
    }
});

var Menu = React.createClass({
    displayName: 'Menu',
    getDefaultProps: function getDefaultProps() {
        return {
            active: false,
            href: null
        };
    },
    render: function render() {
        var className = classNames('menu', {
            'pull-right': this.props.right,
            'pull-left': this.props.left
        });

        return React.createElement(
            'ul',
            { className: className },
            this.props.children
        );
    }
});

module.exports = Menu;
module.exports.Item = MenuItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9NZW51LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxRQUFRLFFBQVEsT0FBUixDQUFkO0FBQ0EsSUFBTSxhQUFhLFFBQVEsWUFBUixDQUFuQjs7QUFFQSxJQUFNLFdBQVcsTUFBTSxXQUFOLENBQWtCO0FBQUE7QUFRL0IsbUJBUitCLDZCQVFiO0FBQ2QsZUFBTztBQUNILG9CQUFRLEtBREw7QUFFSCxrQkFBUTtBQUZMLFNBQVA7QUFJSCxLQWI4QjtBQWUvQixVQWYrQixvQkFldEI7QUFDTCxZQUFJLGNBQUo7QUFDQSxZQUFNLFlBQVksV0FBVyxLQUFLLEtBQUwsQ0FBVyxTQUFYLElBQXdCLEVBQW5DLEVBQXVDO0FBQ3JELHNCQUFVLEtBQUssS0FBTCxDQUFXO0FBRGdDLFNBQXZDLENBQWxCOztBQUlBLFlBQUksS0FBSyxLQUFMLENBQVcsSUFBZixFQUFxQjtBQUNqQixvQkFBUTtBQUFBO0FBQUEsa0JBQUcsTUFBTSxLQUFLLEtBQUwsQ0FBVyxJQUFwQjtBQUEyQixxQkFBSyxLQUFMLENBQVc7QUFBdEMsYUFBUjtBQUNILFNBRkQsTUFFTztBQUNILG9CQUFRO0FBQUE7QUFBQTtBQUFPLHFCQUFLLEtBQUwsQ0FBVztBQUFsQixhQUFSO0FBQ0g7O0FBR0QsZUFDSTtBQUFBO0FBQUEsY0FBSSxXQUFXLFNBQWY7QUFBMkI7QUFBM0IsU0FESjtBQUdIO0FBL0I4QixDQUFsQixDQUFqQjs7QUFrQ0EsSUFBTSxPQUFPLE1BQU0sV0FBTixDQUFrQjtBQUFBO0FBTzNCLG1CQVAyQiw2QkFPVDtBQUNkLGVBQU87QUFDSCxvQkFBUSxLQURMO0FBRUgsa0JBQVE7QUFGTCxTQUFQO0FBSUgsS0FaMEI7QUFjM0IsVUFkMkIsb0JBY2xCO0FBQ0wsWUFBTSxZQUFZLFdBQVcsTUFBWCxFQUFtQjtBQUNqQywwQkFBYyxLQUFLLEtBQUwsQ0FBVyxLQURRO0FBRWpDLHlCQUFhLEtBQUssS0FBTCxDQUFXO0FBRlMsU0FBbkIsQ0FBbEI7O0FBS0EsZUFDSTtBQUFBO0FBQUEsY0FBSSxXQUFXLFNBQWY7QUFDSyxpQkFBSyxLQUFMLENBQVc7QUFEaEIsU0FESjtBQUtIO0FBekIwQixDQUFsQixDQUFiOztBQTRCQSxPQUFPLE9BQVAsR0FBaUIsSUFBakI7QUFDQSxPQUFPLE9BQVAsQ0FBZSxJQUFmLEdBQXNCLFFBQXRCIiwiZmlsZSI6Ik1lbnUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBjbGFzc05hbWVzID0gcmVxdWlyZSgnY2xhc3NuYW1lcycpO1xuXG5jb25zdCBNZW51SXRlbSA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBwcm9wVHlwZXM6IHtcbiAgICAgICAgYWN0aXZlOiAgICBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcbiAgICAgICAgaHJlZjogICAgICBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICBjbGFzc05hbWU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIGNoaWxkcmVuOiBSZWFjdC5Qcm9wVHlwZXMubm9kZVxuICAgIH0sXG5cbiAgICBnZXREZWZhdWx0UHJvcHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhY3RpdmU6IGZhbHNlLFxuICAgICAgICAgICAgaHJlZjogICBudWxsXG4gICAgICAgIH07XG4gICAgfSxcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IGlubmVyO1xuICAgICAgICBjb25zdCBjbGFzc05hbWUgPSBjbGFzc05hbWVzKHRoaXMucHJvcHMuY2xhc3NOYW1lIHx8ICcnLCB7XG4gICAgICAgICAgICAnYWN0aXZlJzogdGhpcy5wcm9wcy5hY3RpdmVcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKHRoaXMucHJvcHMuaHJlZikge1xuICAgICAgICAgICAgaW5uZXIgPSA8YSBocmVmPXt0aGlzLnByb3BzLmhyZWZ9Pnt0aGlzLnByb3BzLmNoaWxkcmVufTwvYT47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpbm5lciA9IDxzcGFuPnt0aGlzLnByb3BzLmNoaWxkcmVufTwvc3Bhbj47XG4gICAgICAgIH1cblxuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXtjbGFzc05hbWV9Pntpbm5lcn08L2xpPlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG5jb25zdCBNZW51ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHByb3BUeXBlczoge1xuICAgICAgICByaWdodDogUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gICAgICAgIGxlZnQ6IFJlYWN0LlByb3BUeXBlcy5ib29sLFxuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGVcbiAgICB9LFxuXG4gICAgZ2V0RGVmYXVsdFByb3BzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYWN0aXZlOiBmYWxzZSxcbiAgICAgICAgICAgIGhyZWY6ICAgbnVsbFxuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IGNsYXNzTmFtZSA9IGNsYXNzTmFtZXMoJ21lbnUnLCB7XG4gICAgICAgICAgICAncHVsbC1yaWdodCc6IHRoaXMucHJvcHMucmlnaHQsXG4gICAgICAgICAgICAncHVsbC1sZWZ0JzogdGhpcy5wcm9wcy5sZWZ0XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8dWwgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBNZW51O1xubW9kdWxlLmV4cG9ydHMuSXRlbSA9IE1lbnVJdGVtO1xuIl19