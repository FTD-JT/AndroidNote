'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var React = require('react');
var classNames = require('classnames');

var Link = require('./Link');

var POSITIONS = ['bottom', 'top'];

/**
 * Pop content with controls over content:
 *
 * <Popover.Container>
 *   <Button>Open</Button>
 *   {open?
 *      <Popover>
 *         <Popover.Heading title="Hello" />
 *         <Popover.Body>...</Popover.Body>
 *         <Popover.Controls>
 *           <Popover.Control onClick={...}>Say Hello</Popover.Control>
 *           <Popover.Control onClick={...}>Say World</Popover.Control>
 *         </Popover.Controls>
 *      </Popover>
 *   : null}
 * </Popover.Container>
 */

var Popover = React.createClass({
    displayName: 'Popover',
    getDefaultProps: function getDefaultProps() {
        return {
            position: POSITIONS[0]
        };
    },
    render: function render() {
        var position = this.props.position;

        var className = classNames('popover', 'popover-' + position);

        return React.createElement(
            'div',
            { className: 'popover-wrapper' },
            React.createElement(
                'div',
                { className: className },
                React.createElement(
                    PopoverCard,
                    null,
                    React.createElement('div', { className: 'popover-arrow' }),
                    this.props.children
                )
            )
        );
    }
});

var PopoverContainer = React.createClass({
    displayName: 'PopoverContainer',
    render: function render() {
        var _props = this.props;
        var className = _props.className;

        var props = _objectWithoutProperties(_props, ['className']);

        className = classNames('popover-container', className);

        return React.createElement(
            'div',
            _extends({ className: className }, props),
            this.props.children
        );
    }
});

// The actual element that looks like a popup card.
var PopoverCard = React.createClass({
    displayName: 'PopoverCard',
    render: function render() {
        return React.createElement(
            'div',
            _extends({ className: 'popover-card' }, this.props),
            this.props.children
        );
    }
});

var PopoverBody = React.createClass({
    displayName: 'PopoverBody',
    render: function render() {
        return React.createElement(
            'div',
            { className: 'popover-body' },
            this.props.children
        );
    }
});

var PopoverHeading = React.createClass({
    displayName: 'PopoverHeading',
    render: function render() {
        if (this.props.title) {
            return React.createElement(
                'div',
                { className: 'popover-heading' },
                React.createElement(
                    'h4',
                    null,
                    this.props.title
                )
            );
        }

        return React.createElement(
            'div',
            { className: 'popover-header' },
            this.props.children
        );
    }
});

var PopoverControl = React.createClass({
    displayName: 'PopoverControl',
    render: function render() {
        var onClick = this.props.onClick;


        return React.createElement(
            Link,
            { className: 'control', onClick: onClick },
            this.props.children
        );
    }
});

var PopoverControls = React.createClass({
    displayName: 'PopoverControls',
    render: function render() {
        return React.createElement(
            'div',
            { className: 'popover-controls' },
            this.props.children
        );
    }
});

module.exports = Popover;
module.exports.Card = PopoverCard;
module.exports.Body = PopoverBody;
module.exports.Heading = PopoverHeading;
module.exports.Container = PopoverContainer;
module.exports.Control = PopoverControl;
module.exports.Controls = PopoverControls;
//# sourceMappingURL=data:application/json;base64,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QVUsa0JBQWY7QUFDSyxpQkFBSyxLQUFMLENBQVc7QUFEaEIsU0FESjtBQUtIO0FBWHNDLENBQWxCLENBQXpCOztBQWNBLE9BQU8sT0FBUCxHQUEyQixPQUEzQjtBQUNBLE9BQU8sT0FBUCxDQUFlLElBQWYsR0FBMkIsV0FBM0I7QUFDQSxPQUFPLE9BQVAsQ0FBZSxJQUFmLEdBQTJCLFdBQTNCO0FBQ0EsT0FBTyxPQUFQLENBQWUsT0FBZixHQUEyQixjQUEzQjtBQUNBLE9BQU8sT0FBUCxDQUFlLFNBQWYsR0FBMkIsZ0JBQTNCO0FBQ0EsT0FBTyxPQUFQLENBQWUsT0FBZixHQUEyQixjQUEzQjtBQUNBLE9BQU8sT0FBUCxDQUFlLFFBQWYsR0FBMkIsZUFBM0IiLCJmaWxlIjoiUG9wb3Zlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IGNsYXNzTmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XG5cbmNvbnN0IExpbmsgPSByZXF1aXJlKCcuL0xpbmsnKTtcblxuY29uc3QgUE9TSVRJT05TID0gWydib3R0b20nLCAndG9wJ107XG5cbi8qKlxuICogUG9wIGNvbnRlbnQgd2l0aCBjb250cm9scyBvdmVyIGNvbnRlbnQ6XG4gKlxuICogPFBvcG92ZXIuQ29udGFpbmVyPlxuICogICA8QnV0dG9uPk9wZW48L0J1dHRvbj5cbiAqICAge29wZW4/XG4gKiAgICAgIDxQb3BvdmVyPlxuICogICAgICAgICA8UG9wb3Zlci5IZWFkaW5nIHRpdGxlPVwiSGVsbG9cIiAvPlxuICogICAgICAgICA8UG9wb3Zlci5Cb2R5Pi4uLjwvUG9wb3Zlci5Cb2R5PlxuICogICAgICAgICA8UG9wb3Zlci5Db250cm9scz5cbiAqICAgICAgICAgICA8UG9wb3Zlci5Db250cm9sIG9uQ2xpY2s9ey4uLn0+U2F5IEhlbGxvPC9Qb3BvdmVyLkNvbnRyb2w+XG4gKiAgICAgICAgICAgPFBvcG92ZXIuQ29udHJvbCBvbkNsaWNrPXsuLi59PlNheSBXb3JsZDwvUG9wb3Zlci5Db250cm9sPlxuICogICAgICAgICA8L1BvcG92ZXIuQ29udHJvbHM+XG4gKiAgICAgIDwvUG9wb3Zlcj5cbiAqICAgOiBudWxsfVxuICogPC9Qb3BvdmVyLkNvbnRhaW5lcj5cbiAqL1xuXG5jb25zdCBQb3BvdmVyID0gIFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBwcm9wVHlwZXM6IHtcbiAgICAgICAgcG9zaXRpb246IFJlYWN0LlByb3BUeXBlcy5vbmVPZihQT1NJVElPTlMpLFxuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGVcbiAgICB9LFxuXG4gICAgZ2V0RGVmYXVsdFByb3BzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcG9zaXRpb246IFBPU0lUSU9OU1swXVxuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgcG9zaXRpb24gfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IGNsYXNzTmFtZSA9IGNsYXNzTmFtZXMoJ3BvcG92ZXInLCAncG9wb3Zlci0nICsgcG9zaXRpb24pO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvcG92ZXItd3JhcHBlclwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWV9PlxuICAgICAgICAgICAgICAgICAgICA8UG9wb3ZlckNhcmQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvcG92ZXItYXJyb3dcIj48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgICAgICAgICAgICA8L1BvcG92ZXJDYXJkPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbmNvbnN0IFBvcG92ZXJDb250YWluZXIgPSAgUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHByb3BUeXBlczoge1xuICAgICAgICBjaGlsZHJlbjogIFJlYWN0LlByb3BUeXBlcy5ub2RlLFxuICAgICAgICBjbGFzc05hbWU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmdcbiAgICB9LFxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgeyBjbGFzc05hbWUsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVzKCdwb3BvdmVyLWNvbnRhaW5lcicsIGNsYXNzTmFtZSk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWV9IHsuLi5wcm9wc30gPlxuICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbi8vIFRoZSBhY3R1YWwgZWxlbWVudCB0aGF0IGxvb2tzIGxpa2UgYSBwb3B1cCBjYXJkLlxuY29uc3QgUG9wb3ZlckNhcmQgPSAgUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHByb3BUeXBlczoge1xuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGVcbiAgICB9LFxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb3BvdmVyLWNhcmRcIiB7Li4udGhpcy5wcm9wc30+XG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuY29uc3QgUG9wb3ZlckJvZHkgPSAgUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHByb3BUeXBlczoge1xuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGVcbiAgICB9LFxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb3BvdmVyLWJvZHlcIj5cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG5jb25zdCBQb3BvdmVySGVhZGluZyA9ICBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcHJvcFR5cGVzOiB7XG4gICAgICAgIHRpdGxlOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICBjaGlsZHJlbjogUmVhY3QuUHJvcFR5cGVzLm5vZGVcbiAgICB9LFxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy50aXRsZSkge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvcG92ZXItaGVhZGluZ1wiPlxuICAgICAgICAgICAgICAgICAgICA8aDQ+e3RoaXMucHJvcHMudGl0bGV9PC9oND5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb3BvdmVyLWhlYWRlclwiPlxuICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbmNvbnN0IFBvcG92ZXJDb250cm9sID0gIFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBwcm9wVHlwZXM6IHtcbiAgICAgICAgY2hpbGRyZW46IFJlYWN0LlByb3BUeXBlcy5ub2RlLFxuICAgICAgICBvbkNsaWNrOiAgUmVhY3QuUHJvcFR5cGVzLmZ1bmNcbiAgICB9LFxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IG9uQ2xpY2sgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxMaW5rIGNsYXNzTmFtZT1cImNvbnRyb2xcIiBvbkNsaWNrPXtvbkNsaWNrfT5cbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgKTtcbiAgICB9XG59KTtcblxuY29uc3QgUG9wb3ZlckNvbnRyb2xzID0gIFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBwcm9wVHlwZXM6IHtcbiAgICAgICAgY2hpbGRyZW46IFJlYWN0LlByb3BUeXBlcy5ub2RlXG4gICAgfSxcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9wb3Zlci1jb250cm9sc1wiPlxuICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzICAgICAgICAgICA9IFBvcG92ZXI7XG5tb2R1bGUuZXhwb3J0cy5DYXJkICAgICAgPSBQb3BvdmVyQ2FyZDtcbm1vZHVsZS5leHBvcnRzLkJvZHkgICAgICA9IFBvcG92ZXJCb2R5O1xubW9kdWxlLmV4cG9ydHMuSGVhZGluZyAgID0gUG9wb3ZlckhlYWRpbmc7XG5tb2R1bGUuZXhwb3J0cy5Db250YWluZXIgPSBQb3BvdmVyQ29udGFpbmVyO1xubW9kdWxlLmV4cG9ydHMuQ29udHJvbCAgID0gUG9wb3ZlckNvbnRyb2w7XG5tb2R1bGUuZXhwb3J0cy5Db250cm9scyAgPSBQb3BvdmVyQ29udHJvbHM7XG4iXX0=